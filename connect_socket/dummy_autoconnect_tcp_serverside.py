import socket

def handle_data(data):
    ENQ = b'05'
    ACK = b'06'
    EOT = b'04'
    LF = b'0A'

    print(f"Byte diterima: {data}")

    if ENQ == data:
        print('RX ENQ')
        return bytes(ACK)
        # conn.send(bytes(ACK.encode()))
    if EOT == data:
        print('RX EOT')
        return bytes(ACK)
        # conn.send(bytes(ACK.encode()))
    if ACK == data:
        print('RX ACK')
        return bytes(EOT)
        # conn.send(bytes(EOT.encode()))
    if  LF == data:
        print('RX LF')
        return bytes(ACK)
        # conn.send(bytes(ACK.encode()))
    # print("jalan handle")

data_send = [0x4d, 0x53, 0x48, 0x7c, 0x5e, 0x7e, 0x5c, 0x26, 0x7c, 0x7c, 0x31, 0x7c, 0x69, 0x63, 0x68, 0x72, 0x6f, 0x6d, 0x61, 0x32, 0x7c, 0x52, 0x45, 0x30, 0x39, 0x32, 0x7c, 0x32, 0x30, 0x32, 0x32, 0x30, 0x33, 0x31, 0x35, 0x30, 0x37, 0x34, 0x39, 0x34, 0x33, 0x2e, 0x32, 0x30, 0x35, 0x2b, 0x30, 0x39, 0x30, 0x30, 0x7c, 0x7c, 0x4f, 0x55, 0x4c, 0x5e, 0x52, 0x32, 0x34, 0x5e, 0x4f, 0x55, 0x4c, 0x5f, 0x52, 0x32, 0x34, 0x7c, 0x31, 0x7c, 0x54, 0x7c, 0x32, 0x2e, 0x36, 0x0d, 0x50, 0x49, 0x44, 0x7c, 0x7c, 0x61, 0x6d, 0x70, 0x61, 0x6c, 0x20, 0x61, 0x73, 0x74, 0x6f, 0x6d, 0x6f, 0x7c, 0x61, 0x6d, 0x70, 0x61, 0x6c, 0x20, 0x61, 0x73, 0x74, 0x6f, 0x6d, 0x6f, 0x7c, 0x7c, 0x7c, 0x7c, 0x34, 0x32, 0x7c, 0x4d, 0x61, 0x6c, 0x65, 0x0d, 0x4f, 0x42, 0x52, 0x7c, 0x7c, 0x44, 0x2d, 0x44, 0x69, 0x6d, 0x65, 0x72, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x34, 0x32, 0x7c, 0x7c, 0x7c, 0x2d, 0x0d, 0x4f, 0x52, 0x43, 0x7c, 0x4f, 0x4b, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x52, 0x45, 0x30, 0x39, 0x32, 0x7c, 0x31, 0x0d, 0x53, 0x50, 0x4d, 0x7c, 0x7c, 0x44, 0x44, 0x52, 0x45, 0x59, 0x30, 0x36, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x0d, 0x4f, 0x42, 0x58, 0x7c, 0x31, 0x7c, 0x54, 0x58, 0x7c, 0x44, 0x2d, 0x44, 0x69, 0x6d, 0x65, 0x72, 0x7c, 0x7c, 0x3c, 0x20, 0x35, 0x30, 0x2e, 0x30, 0x30, 0x7c, 0x6e, 0x67, 0x2f, 0x6d, 0x4c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x52, 0x0d, 0x4f, 0x42, 0x58, 0x7c, 0x32, 0x7c, 0x54, 0x58, 0x7c, 0x44, 0x2d, 0x44, 0x69, 0x6d, 0x65, 0x72, 0x7c, 0x7c, 0x3c, 0x20, 0x30, 0x2e, 0x30, 0x35, 0x7c, 0x75, 0x67, 0x2f, 0x6d, 0x4c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x52, 0x0d, 0x53, 0x50, 0x4d, 0x7c, 0x7c, 0x48, 0x4f, 0x52, 0x4d, 0x4f, 0x4e, 0x20, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x52, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x50, 0x53, 0x4c, 0x59, 0x43, 0x36, 0x39, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x7c, 0x32, 0x30, 0x31, 0x38, 0x30, 0x33, 0x30, 0x33, 0x0d, ]

HOST = '127.0.0.1'
PORT = 3020

ENQ = [0x05]
ACK = [0x06]
EOT = [0x04]
LF = [0x0A]

with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
    try:
        s.bind((HOST, PORT))
        s.listen()

        print(f'Server is listening on {HOST}:{PORT}')

        try:
            conn, addr = s.accept()

            print(f'New connection from: {addr}')
            i=0
            while True:
                i+=1
                data = conn.recv(1024)

                if not data:
                    break

                print(f"Data diterima: {data}")
                # will_send = "Diterima".encode().hex()
                conn.sendall(bytes(ACK))
                print(f"Kirim balik data: {bytes(ACK)}")

        except Exception as e:
            print(e)

    except Exception as e:
        print(e)

    print("Disconnected from server")
    s.close()